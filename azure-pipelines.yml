# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
- develop

name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: "ubuntu-latest"

variables:
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    buildImage: true
    deployService: true
    deployEnvironment: development
    imageTags: |
      $(Build.BuildId)
      develop
    serviceName: studo-develop_front
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    serviceName: studo_front

stages:
- stage: build
  displayName: Build
  jobs:
  - job: buildFront
    steps:
      - task: file-creator@5
        displayName: 'Env creation'
        inputs:
          fileoverwrite: true
          filepath: '.env'
          filecontent: |
            NODE_ENV=production
            VUE_APP_API=/api/
            VUE_APP_FRONT=""
      - task: Npm@1
        displayName: npm ci
        inputs:
          command: 'ci'

      - task: Npm@1
        displayName: npm run build
        inputs:
          command: 'custom'
          customCommand: 'run build'
      - task: CopyFiles@2
        displayName: copy dist to docker artifact
        inputs:
          SourceFolder: 'dist'
          Contents: '**'
          TargetFolder: 'Deploy/studo-front-build'
      - publish: Deploy
        artifact: studo-front-pack
- stage:
  displayName: Build Image
  condition: ${{variables.buildImage}}
  jobs:
    - job:
      steps:
      - download: current
        artifact: studo-front-pack
        displayName: Download studo-front-pack
      - task: Docker@2
        inputs:
          containerRegistry: 'rtuitlab connection by admin'
          repository: 'rtuitlab/studo-front'
          command: 'buildAndPush'
          Dockerfile: '$(Pipeline.Workspace)/studo-front-pack/Dockerfile'
          buildContext: '$(Pipeline.Workspace)/studo-front-pack'
          tags: ${{variables.imageTags}}
- stage:
  condition: ${{variables.deployService}}
  jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: "ubuntu-latest"
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image rtuitlab/studo-front:$(Build.BuildId) ${{variables.serviceName}}'
                  readyTimeout: '20000'